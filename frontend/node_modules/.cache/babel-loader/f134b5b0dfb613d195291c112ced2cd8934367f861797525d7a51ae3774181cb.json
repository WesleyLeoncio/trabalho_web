{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wesle\\\\OneDrive\\\\Documentos\\\\Git\\\\trabalho_web\\\\frontend\\\\src\\\\components\\\\CleaveInput.js\";\n//https://nosir.github.io/cleave.js/\n//https://blog.logrocket.com/formatting-form-inputs-with-cleave-js-and-react/\n\nimport Cleave from \"cleave.js/react\";\nimport \"cleave.js/dist/addons/cleave-phone.br\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CleaveInput = _ref => {\n  let {\n    type,\n    field,\n    placeholder,\n    onChange,\n    options,\n    label,\n    value,\n    error\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-floating mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Cleave, {\n        type: type,\n        className: `form-control ${error ? \"is-invalid\" : \"is-valid\"}`,\n        id: field,\n        name: field,\n        placeholder: placeholder,\n        onChange: onChange,\n        options: options,\n        value: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: field,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"m-0 small text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n};\n_c = CleaveInput;\nexport default CleaveInput;\nvar _c;\n$RefreshReg$(_c, \"CleaveInput\");","map":{"version":3,"names":["Cleave","CleaveInput","type","field","placeholder","onChange","options","label","value","error"],"sources":["C:/Users/wesle/OneDrive/Documentos/Git/trabalho_web/frontend/src/components/CleaveInput.js"],"sourcesContent":["//https://nosir.github.io/cleave.js/\n//https://blog.logrocket.com/formatting-form-inputs-with-cleave-js-and-react/\n\nimport Cleave from \"cleave.js/react\";\nimport \"cleave.js/dist/addons/cleave-phone.br\";\n\nconst CleaveInput = ({ type, field, placeholder, onChange, options, label, value, error }) => {\n    return (\n        <>\n            <div className=\"form-floating mt-3\">\n                <Cleave type={type} className={`form-control ${error ? \"is-invalid\" : \"is-valid\"}`} id={field} name={field} placeholder={placeholder} onChange={onChange} options={options} value={value} />\n                <label htmlFor={field}>{label}</label>\n            </div>\n            {error && <p className=\"m-0 small text-danger\">{error}</p>}\n        </>\n    );\n};\n\nexport default CleaveInput;\n"],"mappings":";AAAA;AACA;;AAEA,OAAOA,MAAM,MAAM,iBAAiB;AACpC,OAAO,uCAAuC;AAAC;AAAA;AAE/C,MAAMC,WAAW,GAAG,QAA0E;EAAA,IAAzE;IAAEC,IAAI;IAAEC,KAAK;IAAEC,WAAW;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,KAAK;IAAEC,KAAK;IAAEC;EAAM,CAAC;EACrF,oBACI;IAAA,wBACI;MAAK,SAAS,EAAC,oBAAoB;MAAA,wBAC/B,QAAC,MAAM;QAAC,IAAI,EAAEP,IAAK;QAAC,SAAS,EAAG,gBAAeO,KAAK,GAAG,YAAY,GAAG,UAAW,EAAE;QAAC,EAAE,EAAEN,KAAM;QAAC,IAAI,EAAEA,KAAM;QAAC,WAAW,EAAEC,WAAY;QAAC,QAAQ,EAAEC,QAAS;QAAC,OAAO,EAAEC,OAAQ;QAAC,KAAK,EAAEE;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eAC5L;QAAO,OAAO,EAAEL,KAAM;QAAA,UAAEI;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACpC,EACLE,KAAK,iBAAI;MAAG,SAAS,EAAC,uBAAuB;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA,gBAC3D;AAEX,CAAC;AAAC,KAVIR,WAAW;AAYjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}